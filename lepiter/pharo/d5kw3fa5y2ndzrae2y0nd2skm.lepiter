{
	"__schema" : "4.1",
	"__type" : "page",
	"uid" : {
		"__type" : "uuid",
		"uuid" : "2666920e-7d84-0d00-9b17-30b60c3334de"
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Cookbook 2"
	},
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-04T16:08:37.358825-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-04T16:08:39.718307-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "xGk11F2MDQC/tg2TAYiWOw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Changing an Object's Class\rThere is {{gtMethod:Behavior>>#adoptInstance:}}, but following through the class comments, one doesn't get a warm and fuzzy feeling, as it is apparently \"*not for casual use*\".\rA specific case is when you have an object, but you want an instance of a subclass. In this case, you can use {{gtMethod:Object class>>#newFrom:}} and/or {{gtMethod:Object>>#copySameFrom:}}. For example:\r```\r\tPDFFileReference newFrom: '/path/to/file.pdf' asFileReference\r```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-04T16:08:34.545359-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-11-04T16:08:45.874273-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "0IAK1F2MDQC/tXCjAYiWOw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "# Replacing Strings with Real Objects\rA good way to start may be to search for implementors of the accessor. In this example, we search for implementors of `macAddress`. For each relevant method:\r```\robjs := self methodClass allSubInstances select: [ :e | e macAddress isNotNil ].\robjs collect: [ :e | \r\t| newMac |\r\tnewMac := CwMAC_Address fromString: e macAddress.\r\t{ e macAddress. newMac } ]. \"Compare current values with replacements\"\robjs do: [ :e | \r\t| newMac |\r\tnewMac := CwMAC_Address fromString: e macAddress.\r\te macAddress: newMac ]\r```"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-10-09T05:23:47.186123-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-10-09T05:23:58.83631-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "dkBg4qbDDQC8gJm/AXlXlg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "[[Sort Functions]]"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-07-27T10:02:38.706399-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-07-27T10:02:38.706399-04:00"
		}
	}
}