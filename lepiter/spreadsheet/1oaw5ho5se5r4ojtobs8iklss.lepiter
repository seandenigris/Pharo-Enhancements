{
	"__schema" : "4.1",
	"__type" : "page",
	"uid" : {
		"__type" : "uuid",
		"uuid" : "5c9d7ff8-7aef-0d00-a6b3-f8a202424b1c"
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Table Snippet"
	},
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-19T22:01:27.248714-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-20T20:42:06.528353-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "lZfD3Y3vDQCNfarMB5KLug=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "{{gtClass:LeWordSnippet}} has the dual edit / render modes we are interested in, holding the word, and the rendered definition based on it. It is mentioned {{gtPage:Extending Lepiter with custom snippets and annotations|db=2j9m7db2i4oz116bexd7wbdxo|label=in the GT Book}}. On second thought, is that really what we want? What if we could fiddle with code and simultaneously see the rendering change?"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-19T21:01:32.73862-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-19T21:19:18.828689-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "braDB43vDQCAB77+B5KLug=="
				},
				"code" : "table := PeTableElement new.\rtable\r\taddChild: (BlElement new background: Color red);\r\taddChild: (BlElement new background: Color red);\r\taddChild: (BlElement new background: Color red);\r\taddChild: (BlElement new background: Color red);\r\taddChild: (BlElement new background: Color red);\r\taddChild: (BlElement new background: Color red);\r\taddChild: (BlElement new background: Color red);\r\taddChild: (BlElement new background: Color red);\r\tyourself"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-20T20:56:45.105421-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-20T20:56:47.783284-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "TFePBqHvDQCjj44wBexwMA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "##Motivation"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-20T20:56:48.686615-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-20T20:58:06.226534-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "TcpsFKHvDQCj99M5BexwMA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Say for a presentation to executives, instead of code to execute and spawn a result, we want to have the result rendered, but still be able to live edit the code to change the result."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-20T20:58:34.106209-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-20T21:00:44.378872-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "zy7zGaHvDQCo50dYBexwMA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Before we even get that far, one can't always easily get the thing we want to be spawned. One example was that we wanted to spawn an object on the right with a particular view active. However, looked at another way, this limitation was a result of failure to fully apply moldable patterns. If contained collections were customized, we could return those instead of relying on the views in the container."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-20T21:00:46.076213-04:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-04-20T21:02:16.798241-04:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "HhGTIqHvDQCzdzlXBexwMA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "An interesting, seemingly related angle is to be able to enable a customized preview for olObject annotations. The idea came from word snippets, which have the triangle next to the rendered text to open the deifinition."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-04-19T21:01:28.394897-04:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-04-19T21:01:28.394897-04:00"
		}
	}
}